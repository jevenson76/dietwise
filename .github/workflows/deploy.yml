name: Deploy to Stores

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      deploy_target:
        description: 'Deploy target'
        required: true
        default: 'staging'
        type: choice
        options:
        - staging
        - production
        - internal-testing

jobs:
  deploy-web:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build for production
      run: npm run build
      env:
        GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        
    - name: Deploy to GitHub Pages (if staging)
      if: github.event.inputs.deploy_target == 'staging' || github.event_name == 'workflow_dispatch'
      uses: peaceiris/actions-gh-pages@v4
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./dist

  deploy-android-internal:
    runs-on: ubuntu-latest
    if: github.event.inputs.deploy_target == 'internal-testing' || github.event_name == 'release'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '21'
        
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      
    - name: Install dependencies
      run: npm ci
      
    - name: Install Capacitor
      run: npm install @capacitor/core @capacitor/cli @capacitor/android @capacitor/camera
      
    - name: Build web assets
      run: npm run build
      env:
        GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        
    - name: Setup Capacitor and Android
      run: |
        npx cap init DietWise com.wizardtech.dietwise --web-dir=dist
        npx cap add android
        npx cap copy android
        npx cap update android
        
    - name: Decode Keystore
      if: github.event.inputs.deploy_target == 'production' || github.event_name == 'release'
      run: |
        echo "${{ secrets.ANDROID_KEYSTORE }}" | base64 -d > android/keystore.jks
        
    - name: Build Android Release Bundle
      if: github.event.inputs.deploy_target == 'production' || github.event_name == 'release'
      run: |
        cd android
        ./gradlew bundleRelease
      env:
        KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
        KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
        KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
        
    - name: Build Android Debug APK
      if: github.event.inputs.deploy_target == 'internal-testing'
      run: |
        cd android
        ./gradlew assembleDebug
        
    - name: Upload to Play Console (Internal Testing)
      if: github.event.inputs.deploy_target == 'internal-testing'
      uses: r0adkll/upload-google-play@v1
      with:
        serviceAccountJsonPlainText: ${{ secrets.GOOGLE_PLAY_SERVICE_ACCOUNT }}
        packageName: com.wizardtech.dietwise
        releaseFiles: android/app/build/outputs/apk/debug/app-debug.apk
        track: internal
        
    - name: Upload to Play Console (Production)
      if: github.event.inputs.deploy_target == 'production' || github.event_name == 'release'
      uses: r0adkll/upload-google-play@v1
      with:
        serviceAccountJsonPlainText: ${{ secrets.GOOGLE_PLAY_SERVICE_ACCOUNT }}
        packageName: com.wizardtech.dietwise
        releaseFiles: android/app/build/outputs/bundle/release/app-release.aab
        track: production
        status: draft

  deploy-ios:
    runs-on: macos-latest
    if: github.event.inputs.deploy_target == 'production' || github.event_name == 'release'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Install Capacitor
      run: npm install @capacitor/core @capacitor/cli @capacitor/ios @capacitor/camera
      
    - name: Build web assets
      run: npm run build
      env:
        GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        
    - name: Setup Capacitor and iOS
      run: |
        npx cap init DietWise com.wizardtech.dietwise --web-dir=dist
        npx cap add ios
        npx cap copy ios
        npx cap update ios
        
    - name: Import Code-Signing Certificates
      uses: Apple-Actions/import-codesign-certs@v2
      with:
        p12-file-base64: ${{ secrets.IOS_DIST_CERT }}
        p12-password: ${{ secrets.IOS_DIST_CERT_PASSWORD }}
        
    - name: Download Provisioning Profile
      uses: Apple-Actions/download-provisioning-profiles@v1
      with:
        bundle-id: com.wizardtech.dietwise
        issuer-id: ${{ secrets.APPSTORE_ISSUER_ID }}
        api-key-id: ${{ secrets.APPSTORE_KEY_ID }}
        api-private-key: ${{ secrets.APPSTORE_PRIVATE_KEY }}
        
    - name: Build and Archive iOS
      run: |
        cd ios/App
        xcodebuild -workspace App.xcworkspace -scheme App -configuration Release -destination generic/platform=iOS -archivePath App.xcarchive archive
        
    - name: Export IPA
      run: |
        cd ios/App
        xcodebuild -exportArchive -archivePath App.xcarchive -exportPath ./export -exportOptionsPlist exportOptions.plist
        
    - name: Upload to TestFlight
      uses: Apple-Actions/upload-testflight-build@v1
      with:
        app-path: ios/App/export/App.ipa
        issuer-id: ${{ secrets.APPSTORE_ISSUER_ID }}
        api-key-id: ${{ secrets.APPSTORE_KEY_ID }}
        api-private-key: ${{ secrets.APPSTORE_PRIVATE_KEY }}