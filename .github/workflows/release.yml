name: Create Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., 1.0.0)'
        required: true
        type: string
      release_type:
        description: 'Type of release'
        required: true
        default: 'patch'
        type: choice
        options:
        - patch
        - minor
        - major
      prerelease:
        description: 'Mark as prerelease'
        required: false
        default: false
        type: boolean

jobs:
  create-release:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Update version in package.json
      run: |
        # Update version
        npm version ${{ github.event.inputs.version }} --no-git-tag-version
        
    - name: Generate changelog
      id: changelog
      run: |
        # Generate changelog from git commits
        LAST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "")
        if [ -z "$LAST_TAG" ]; then
          COMMITS=$(git log --pretty=format:"- %s" --no-merges)
        else
          COMMITS=$(git log ${LAST_TAG}..HEAD --pretty=format:"- %s" --no-merges)
        fi
        
        # Create changelog content
        cat > CHANGELOG_TEMP.md << EOF
        ## What's Changed
        
        ${COMMITS}
        
        ## Mobile App Features
        - 📱 Progressive Web App ready for mobile deployment
        - 📸 Camera integration for barcode scanning
        - 🤖 AI-powered nutrition analysis via Gemini API
        - 📊 Comprehensive dietary tracking and analytics
        - 🎯 Personalized meal planning and recommendations
        
        ## Technical Improvements
        - ⚡ Built with React 19 + Vite for optimal performance
        - 🔐 Secure API key management
        - 📦 Capacitor integration for native mobile features
        - 🚀 Automated CI/CD pipeline for web and mobile builds
        
        ## Store Readiness
        - ✅ PWA manifest configured
        - ✅ Service worker implemented
        - ✅ Camera permissions configured
        - ✅ Privacy policy compliance ready
        - ✅ Medical disclaimer compliance
        EOF
        
        # Set output for GitHub
        echo 'CHANGELOG<<EOF' >> $GITHUB_OUTPUT
        cat CHANGELOG_TEMP.md >> $GITHUB_OUTPUT
        echo 'EOF' >> $GITHUB_OUTPUT
        
    - name: Build release assets
      run: |
        # Build web version
        npm run build
        
        # Create distribution package
        tar -czf dietwise-web-v${{ github.event.inputs.version }}.tar.gz dist/
        
        # Create source code archive
        git archive --format=zip --prefix=dietwise-v${{ github.event.inputs.version }}/ HEAD > dietwise-source-v${{ github.event.inputs.version }}.zip
        
    - name: Commit version bump
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add package.json
        git commit -m "chore: bump version to v${{ github.event.inputs.version }}

        🤖 Generated with [Claude Code](https://claude.ai/code)
        
        Co-Authored-By: Claude <noreply@anthropic.com>"
        
    - name: Create and push tag
      run: |
        git tag -a v${{ github.event.inputs.version }} -m "Release v${{ github.event.inputs.version }}"
        git push origin v${{ github.event.inputs.version }}
        git push origin ${{ github.ref_name }}
        
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: v${{ github.event.inputs.version }}
        name: DietWise v${{ github.event.inputs.version }}
        body: ${{ steps.changelog.outputs.CHANGELOG }}
        prerelease: ${{ github.event.inputs.prerelease }}
        files: |
          dietwise-web-v${{ github.event.inputs.version }}.tar.gz
          dietwise-source-v${{ github.event.inputs.version }}.zip
        generate_release_notes: true
        
    - name: Trigger deployment workflow
      uses: peter-evans/repository-dispatch@v3
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        event-type: release-created
        client-payload: |
          {
            "version": "${{ github.event.inputs.version }}",
            "prerelease": ${{ github.event.inputs.prerelease }}
          }
          
    - name: Create release summary
      run: |
        echo "## Release v${{ github.event.inputs.version }} Created! 🎉" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Release Details:" >> $GITHUB_STEP_SUMMARY
        echo "- **Version**: v${{ github.event.inputs.version }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Type**: ${{ github.event.inputs.release_type }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Prerelease**: ${{ github.event.inputs.prerelease }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Next Steps:" >> $GITHUB_STEP_SUMMARY
        echo "1. Monitor the deployment workflow" >> $GITHUB_STEP_SUMMARY
        echo "2. Test the release builds" >> $GITHUB_STEP_SUMMARY
        echo "3. Update store listings if needed" >> $GITHUB_STEP_SUMMARY
        echo "4. Announce the release to users" >> $GITHUB_STEP_SUMMARY